#include <DHT.h>

// -------------------- Pin Definitions --------------------
#define trigPin 2
#define echoPin 3

#define ENA 9      // must be a PWM pin
#define IN1 8
#define IN2 9
#define ENB 5      // must be a PWM pin
#define IN3 10
#define IN4 11

#define modeSwitchPin 6   // mode select switch pin
#define DHTPIN 7           // DHT sensor data pin
#define DHTTYPE DHT11      // or DHT22 if you use that

// -------------------- Variables --------------------
DHT dht(DHTPIN, DHTTYPE);
long duration;
int distance;
int motorSpeed = 180;  // 0–255

// -------------------- Setup --------------------
void setup() {
  Serial.begin(115200);

  // Ultrasonic
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Motor driver
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  // Mode switch (default HIGH because of internal pull-up)
  pinMode(modeSwitchPin, INPUT_PULLUP);

  // DHT sensor
  dht.begin();

  // Set initial motor speed
  analogWrite(ENA, motorSpeed);
  analogWrite(ENB, motorSpeed);

  Serial.println("System Ready: Default mode = Object Avoidance");
}

// -------------------- Helper Functions --------------------
int getDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  duration = pulseIn(echoPin, HIGH, 30000); // 30ms timeout
  if (duration == 0) return 999; // no object
  distance = duration * 0.034 / 2;
  return distance;
}

// Motor functions
void moveForward() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void stopMotors() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}

void turnRight() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  delay(600);
  stopMotors();
  delay(200);
}

// -------------------- Main Loop --------------------
void loop() {
  int modeState = digitalRead(modeSwitchPin); // HIGH = avoidance, LOW = DHT mode

  if (modeState == HIGH) {
    // =============== OBJECT AVOIDANCE MODE ===============
    int dist = getDistance();
    Serial.print("Mode: Object Avoidance | Distance: ");
    Serial.print(dist);
    Serial.println(" cm");

    if (dist > 20) {
      moveForward();
    } else {
      stopMotors();
      delay(200);
      turnRight();
    }

    delay(100);

  } else {
    // =============== DHT SENSOR MODE ===============
    stopMotors();
    Serial.println("Mode: DHT Sensor Active | Car Stopped");

    float temp = dht.readTemperature();
    float hum = dht.readHumidity();

    if (isnan(temp) || isnan(hum)) {
      Serial.println("❌ Failed to read from DHT sensor!");
    } else {
      Serial.print("🌡 Temperature: ");
      Serial.print(temp);
      Serial.print(" °C   |   💧 Humidity: ");
      Serial.print(hum);
      Serial.println(" %");
    }

    delay(2000); // Read every 2 seconds
  }
}
